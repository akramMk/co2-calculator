stages:
    - sonarqube-check
    - sonarqube-vulnerability-report
    - deploy

sonarqube-check:
  stage: sonarqube-check
  image: maven:3-eclipse-temurin-17
  variables:
    SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"  # Defines the location of the analysis task cache
    GIT_DEPTH: "0"  # Tells git to fetch all the branches of the project, required by the analysis task
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - .sonar/cache
  script:
    - chmod +x ./setup-mvn-proxy.sh
    - ./setup-mvn-proxy.sh
    - cd back
    - mvn verify sonar:sonar
  allow_failure: true
  only:
    - merge_requests
    - master
    - main
    - develop

sonarqube-vulnerability-report:
  stage: sonarqube-vulnerability-report
  script:
    - apt-get update -y && apt-get install -y curl
    - 'curl -u "${SONAR_TOKEN}:" "${SONAR_HOST_URL}/api/issues/gitlab_sast_export?projectKey=m1if10-grp1_mif10_AY6KkQACu4zgX3p-IR9u&branch=${CI_COMMIT_BRANCH}&pullRequest=${CI_MERGE_REQUEST_IID}" -o gl-sast-sonar-report.json'
  allow_failure: true
  only:
    - merge_requests
    - master
    - main
    - develop
  artifacts:
    expire_in: 1 day
    reports:
      sast: gl-sast-sonar-report.json
  dependencies:
    - sonarqube-check

deploy:
  stage : deploy
  image: maven:3.9.6-eclipse-temurin-21
  only:
    - main
    - back
  before_script:
    - chmod +x ./setup-mvn-proxy.sh
    - ./setup-mvn-proxy.sh
    - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )' 
    - chmod 400 $CI_SSH_KEY

  script:
    - cd back
    - mvn clean package
    - scp -o StrictHostKeyChecking=no -i $CI_SSH_KEY target/mif10-0.0.1-SNAPSHOT.war gitlabci@192.168.75.108:/opt/tomcat/webapps/server.war
    - cd ..
    - scp -r -o StrictHostKeyChecking=no -i $CI_SSH_KEY front/* gitlabci@192.168.75.108:/usr/share/nginx/html
